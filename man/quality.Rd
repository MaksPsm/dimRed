% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quality.R
\docType{methods}
\name{quality}
\alias{Q_global}
\alias{Q_global,dimRedResult-method}
\alias{Q_local}
\alias{Q_local,dimRedResult-method}
\alias{cophenetic_correlation}
\alias{cophenetic_correlation,dimRedResult,missingORfunction,missingORcharacter-method}
\alias{distance_correlation}
\alias{mean_R_NX}
\alias{mean_R_NX,dimRedResult-method}
\alias{quality}
\alias{reconstruction_rmse}
\alias{reconstruction_rmse,dimRedResult-method}
\alias{total_correlation}
\alias{total_correlation,dimRedResult,missingORnumeric,missingORcharacter,missingORlogical-method}
\title{dispatches the different methods for quality assessment}
\usage{
quality(data, method = dimRedQualityList(), mute = c("output", "message"),
  ...)

Q_local(object)

\S4method{Q_local}{dimRedResult}(object)

Q_global(object)

\S4method{Q_global}{dimRedResult}(object)

mean_R_NX(object)

\S4method{mean_R_NX}{dimRedResult}(object)

total_correlation(object, naxes, cor_method, is.rotated)


  \S4method{total_correlation}{dimRedResult,missingORnumeric,missingORcharacter,missingORlogical}(object,
  naxes, cor_method, is.rotated)

cophenetic_correlation(object, d, cor_method)


  \S4method{cophenetic_correlation}{dimRedResult,missingORfunction,missingORcharacter}(object,
  d, cor_method)

distance_correlation(object)

reconstruction_rmse(object)

\S4method{reconstruction_rmse}{dimRedResult}(object)
}
\arguments{
\item{data}{object of class \code{dimRedResult}}

\item{method}{character vector naming one of the methods}

\item{...}{the pameters, internally passed as a list to the
quality method as \code{pars = list(...)}}
}
\value{
a number
}
\description{
wraps around all quality assessment functions functions.
}
\details{
method must be one of \code{"\link{Q_local}", "\link{Q_global}",
"\link{mean_R_NX}", "\link{total_correlation}",
"\link{cophenetic_correlation}", "\link{distance_correlation}",
"\link{reconstruction_rmse}"}
}
\examples{
embed_methods <- dimRedMethodList() 
quality_methods <- dimRedQualityList()
scurve <- loadDataSet("3D S Curve", n = 500)

quality_results <- matrix(NA, length(embed_methods), length(quality_methods),
                              dimnames = list(embed_methods, quality_methods))
embedded_data <- list()

for(e in embed_methods) {
  message("embedding: ", e)
  embedded_data[[e]] <- embed(scurve, e)
  for(q in quality_methods) {
    message("  quality: ", q)
    try(quality_results[e,q] <- quality(embedded_data[[e]], q), silent = TRUE)
  }
}

print(quality_results)

}

