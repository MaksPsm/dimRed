% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnmf.R
\docType{class}
\name{NNMF-class}
\alias{NNMF-class}
\alias{NNMF}
\title{Non-Negative Matrix Factorization}
\description{
S4 Class implementing NNMF.
}
\details{
NNMF is a method for decomposing a matrix into a smaller 
 dimension such that the constraint that the data (and the 
 projection) are not negative is taken into account.
}
\section{Slots}{

\describe{
\item{\code{fun}}{A function that does the embedding and returns a
dimRedResult object.}

\item{\code{stdpars}}{The standard parameters for the function.}
}}

\section{General usage}{

Dimensionality reduction methods are S4 Classes that either be used
directly, in which case they have to be initialized and a full
list with parameters has to be handed to the \code{@fun()}
slot, or the method name be passed to the embed function and
parameters can be given to the \code{...}, in which case
missing parameters will be replaced by the ones in the
\code{@stdpars}.
}

\section{Parameters}{

The method can take the following parameters:
\describe{
  \item{ndim}{The number of output dimensions.}
  \item{method}{character, should be either "scd" for (sequential 
   coordinate-wise descent) or "lee" (for Lee's multiplicative algorithm).}
  \item{loss}{character, should be either  "mse" for mean square error 
   or "mkl" for mean Kullback-Leibler-divergence.}
  \item{max.iter}{integer, maximum number of iterations (default: 500).}
  \item{n.threads}{integer, number of threads (default: no parallelism)}
  \item{verbose}{integer between 0 and 2, for amount of logging. Defaults
   to 0L.}
  \item{rel.tol}{numeric, convergence criterion that defaults to 1e-04.}
}
}

\section{Implementation}{


Wraps around \code{\link[NNLM]{nnmf}}. Note that the estimation uses random
 numbers. To create reproducible results, set the random number seed prior
 to execution.
}

\examples{
dat <- loadDataSet("Iris")

set.seed(4646)
factorization <- embed(dat, "NNMF")

proj_dat <- factorization@apply(dat)

plot(proj_dat@data[, 1], proj_dat@data[, 2])

}
\seealso{
Other dimensionality reduction methods: \code{\link{AutoEncoder-class}},
  \code{\link{DRR-class}},
  \code{\link{DiffusionMaps-class}},
  \code{\link{DrL-class}}, \code{\link{FastICA-class}},
  \code{\link{FruchtermanReingold-class}},
  \code{\link{HLLE-class}}, \code{\link{Isomap-class}},
  \code{\link{KamadaKawai-class}}, \code{\link{LLE-class}},
  \code{\link{MDS-class}}, \code{\link{PCA-class}},
  \code{\link{PCA_L1-class}},
  \code{\link{dimRedMethod-class}},
  \code{\link{kPCA-class}}, \code{\link{nMDS-class}},
  \code{\link{tSNE-class}}
}
